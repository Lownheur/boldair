-- Suppression des tables existantes si elles existent (optionnel, pour un test propre)
-- Attention : ceci supprime toutes les données dans ces tables !

-- Set search path to boldair schema
SET search_path TO boldair;

-- Drop tables in reverse order of dependencies
DROP TABLE IF EXISTS compte_admin CASCADE;
DROP TABLE IF EXISTS compte_participant CASCADE;
DROP TABLE IF EXISTS compte_benevol CASCADE;
DROP TABLE IF EXISTS changer_roles CASCADE;
DROP TABLE IF EXISTS classer CASCADE;
DROP TABLE IF EXISTS Accepte___refuse CASCADE; -- Assuming this should be accepte_refuse later if standardized
DROP TABLE IF EXISTS Participant CASCADE; -- Assuming this should be participant later
DROP TABLE IF EXISTS equipe CASCADE; -- Changed from Equipe
DROP TABLE IF EXISTS roles CASCADE;
DROP TABLE IF EXISTS Classement CASCADE; -- Assuming this should be classement later
DROP TABLE IF EXISTS epreuve CASCADE; -- Changed from Epreuve
DROP TABLE IF EXISTS Admin CASCADE; -- Assuming this should be admin later
DROP TABLE IF EXISTS Benevol CASCADE; -- Assuming this should be benevol later
DROP TABLE IF EXISTS compte CASCADE;

-- Create Roles table first (referenced by Benevol)
CREATE TABLE roles(
   id_roles BIGINT GENERATED BY DEFAULT AS IDENTITY,
   nomrole VARCHAR(100),
   quantité VARCHAR(100),
   type_benevole VARCHAR(50),
   horaire VARCHAR(100),
   bénévoles VARCHAR(50),
   PRIMARY KEY(id_roles)
);

CREATE TABLE Benevol(
   Id_Benevol BIGINT GENERATED BY DEFAULT AS IDENTITY,
   interne___externe BOOLEAN,
   nom VARCHAR(50) ,
   email VARCHAR(50) ,
   téléphone VARCHAR(50) ,
   prénom VARCHAR(50) ,
   statut VARCHAR(50) ,
   heure_debut_dispo TIME,
   heure_fin_dispo TIME,
   commentaire VARCHAR(500),
   permis BOOLEAN,   interne BOOLEAN,
   id_compte BIGINT,
   id_role BIGINT,
   PRIMARY KEY(Id_Benevol),
   FOREIGN KEY(id_role) REFERENCES roles(id_roles)
);

CREATE TABLE Admin(
   Id_Admin BIGINT GENERATED BY DEFAULT AS IDENTITY,
   PRIMARY KEY(Id_Admin)
);

CREATE TABLE epreuve( -- Changed from Epreuve
   id_epreuve BIGINT GENERATED BY DEFAULT AS IDENTITY, -- Changed from Id_Epreuve
   nom_bol_dair VARCHAR(50) ,
   PRIMARY KEY(id_epreuve) -- Changed from Id_Epreuve
);

CREATE TABLE Classement(
   Id_Classement BIGINT GENERATED BY DEFAULT AS IDENTITY,
   année VARCHAR(50) ,
   PRIMARY KEY(Id_Classement)
);

CREATE TABLE equipe( -- Changed from Equipe
   id_equipe BIGINT GENERATED BY DEFAULT AS IDENTITY, -- Changed from Id_Equipe
   nom_equipe VARCHAR(50) ,
   nom_bol_dair VARCHAR(50) ,
   num_classement VARCHAR(50) ,
   catégorie VARCHAR(50) ,
   temps_retenu VARCHAR(50) ,
   paid BOOLEAN,
   numero_dossard VARCHAR(50) ,
   ticket_repas VARCHAR(50) ,
   id_epreuve BIGINT NOT NULL, -- Changed from Id_Epreuve
   PRIMARY KEY(id_equipe), -- Changed from Id_Equipe
   FOREIGN KEY(id_epreuve) REFERENCES epreuve(id_epreuve) -- Changed from Id_Epreuve, Epreuve(Id_Epreuve)
);

CREATE TABLE compte(
   id_compte BIGINT GENERATED BY DEFAULT AS IDENTITY,
   pseudo VARCHAR(50) NOT NULL,
   email VARCHAR(50) NOT NULL,
   empreinte_mdp VARCHAR(68) NOT NULL,
   role_admin BOOLEAN NOT NULL,
   role_benevol BOOLEAN NOT NULL,
   PRIMARY KEY(id_compte),
   UNIQUE(email)
);

CREATE TABLE Participant(
   Id_PARTICIPATEUR BIGINT GENERATED BY DEFAULT AS IDENTITY,
   Nom VARCHAR(50) ,
   Prénom VARCHAR(50) ,
   status VARCHAR(50) ,
   nom_equipe VARCHAR(50) ,
   sexe VARCHAR(50) ,
   bol_d_air VARCHAR(50) ,
   date_de_naissance DATE,
   email VARCHAR(50) ,
   certificat_médical VARCHAR(50) ,
   num_puce VARCHAR(50) ,
   id_equipe BIGINT NOT NULL, -- Changed from Id_Equipe
   PRIMARY KEY(Id_PARTICIPATEUR),
   FOREIGN KEY(id_equipe) REFERENCES equipe(id_equipe) -- Changed from Id_Equipe, Equipe(Id_Equipe)
);

CREATE TABLE Accepte___refuse(
   Id_Benevol BIGINT,
   Id_Admin BIGINT,
   PRIMARY KEY(Id_Benevol, Id_Admin),
   FOREIGN KEY(Id_Benevol) REFERENCES Benevol(Id_Benevol),
   FOREIGN KEY(Id_Admin) REFERENCES Admin(Id_Admin)
);

CREATE TABLE classer(
   id_epreuve BIGINT, -- Changed from Id_Epreuve
   Id_Classement BIGINT,
   PRIMARY KEY(id_epreuve, Id_Classement), -- Changed from Id_Epreuve
   FOREIGN KEY(id_epreuve) REFERENCES epreuve(id_epreuve), -- Changed from Id_Epreuve, Epreuve(Id_Epreuve)
   FOREIGN KEY(Id_Classement) REFERENCES Classement(Id_Classement)
);

CREATE TABLE changer_roles(
   Id_Benevol BIGINT,
   Id_Admin BIGINT,
   PRIMARY KEY(Id_Benevol, Id_Admin),
   FOREIGN KEY(Id_Benevol) REFERENCES Benevol(Id_Benevol),
   FOREIGN KEY(Id_Admin) REFERENCES Admin(Id_Admin)
);