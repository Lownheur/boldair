-- Suppression des tables existantes si elles existent (optionnel, pour un test propre)
-- Attention : ceci supprime toutes les données dans ces tables !

-- Drop tables in reverse order of dependencies
DROP TABLE IF EXISTS compte_admin CASCADE;
DROP TABLE IF EXISTS compte_participant CASCADE;
DROP TABLE IF EXISTS compte_benevol CASCADE;
DROP TABLE IF EXISTS possède CASCADE;
DROP TABLE IF EXISTS changer_roles CASCADE;
DROP TABLE IF EXISTS classer CASCADE;
DROP TABLE IF EXISTS Accepte___refuse CASCADE;
DROP TABLE IF EXISTS Participant CASCADE;
DROP TABLE IF EXISTS Equipe CASCADE;
DROP TABLE IF EXISTS Roles CASCADE;
DROP TABLE IF EXISTS Classement CASCADE;
DROP TABLE IF EXISTS Epreuve CASCADE;
DROP TABLE IF EXISTS Admin CASCADE;
DROP TABLE IF EXISTS Benevol CASCADE;
DROP TABLE IF EXISTS compte CASCADE;

CREATE TABLE Benevol(
   Id_Benevol BIGINT GENERATED BY DEFAULT AS IDENTITY,
   interne___externe BOOLEAN,
   nom VARCHAR(50) ,
   email VARCHAR(50) ,
   téléphone VARCHAR(50) ,
   prénom VARCHAR(50) ,
   statut VARCHAR(50) ,
   PRIMARY KEY(Id_Benevol)
);

CREATE TABLE Admin(
   Id_Admin BIGINT GENERATED BY DEFAULT AS IDENTITY,
   PRIMARY KEY(Id_Admin)
);

CREATE TABLE Epreuve(
   Id_Epreuve BIGINT GENERATED BY DEFAULT AS IDENTITY,
   nom_bol_dair VARCHAR(50) ,
   PRIMARY KEY(Id_Epreuve)
);

CREATE TABLE Classement(
   Id_Classement BIGINT GENERATED BY DEFAULT AS IDENTITY,
   année VARCHAR(50) ,
   PRIMARY KEY(Id_Classement)
);

CREATE TABLE Equipe(
   Id_Equipe BIGINT GENERATED BY DEFAULT AS IDENTITY,
   nom_equipe VARCHAR(50) ,
   nom_bol_dair VARCHAR(50) ,
   num_classement VARCHAR(50) ,
   catégorie VARCHAR(50) ,
   temps_retenu VARCHAR(50) ,
   paid BOOLEAN,
   numero_dossard VARCHAR(50) ,
   ticket_repas VARCHAR(50) ,
   Id_Epreuve BIGINT NOT NULL,
   PRIMARY KEY(Id_Equipe),
   FOREIGN KEY(Id_Epreuve) REFERENCES Epreuve(Id_Epreuve)
);

CREATE TABLE Roles(
   Id_Roles BIGINT GENERATED BY DEFAULT AS IDENTITY,
   NomRole VARCHAR(50) ,
   quantité VARCHAR(50) ,
   type_benevole VARCHAR(50) ,
   horaire VARCHAR(50) ,
   bénévoles VARCHAR(50) ,
   PRIMARY KEY(Id_Roles)
);

CREATE TABLE compte(
   id_compte BIGINT GENERATED BY DEFAULT AS IDENTITY,
   pseudo VARCHAR(50) NOT NULL,
   email VARCHAR(50) NOT NULL,
   empreinte_mdp VARCHAR(68) NOT NULL,
   role_admin BOOLEAN NOT NULL,
   role_benevol BOOLEAN NOT NULL,
   PRIMARY KEY(id_compte),
   UNIQUE(email)
);

CREATE TABLE Participant(
   Id_PARTICIPATEUR BIGINT GENERATED BY DEFAULT AS IDENTITY,
   Nom VARCHAR(50) ,
   Prénom VARCHAR(50) ,
   status VARCHAR(50) ,
   nom_equipe VARCHAR(50) ,
   sexe VARCHAR(50) ,
   bol_d_air VARCHAR(50) ,
   date_de_naissance DATE,
   email VARCHAR(50) ,
   certificat_médical VARCHAR(50) ,
   num_puce VARCHAR(50) ,
   Id_Equipe BIGINT NOT NULL,
   PRIMARY KEY(Id_PARTICIPATEUR),
   FOREIGN KEY(Id_Equipe) REFERENCES Equipe(Id_Equipe)
);

CREATE TABLE Accepte___refuse(
   Id_Benevol BIGINT,
   Id_Admin BIGINT,
   PRIMARY KEY(Id_Benevol, Id_Admin),
   FOREIGN KEY(Id_Benevol) REFERENCES Benevol(Id_Benevol),
   FOREIGN KEY(Id_Admin) REFERENCES Admin(Id_Admin)
);

CREATE TABLE classer(
   Id_Epreuve BIGINT,
   Id_Classement BIGINT,
   PRIMARY KEY(Id_Epreuve, Id_Classement),
   FOREIGN KEY(Id_Epreuve) REFERENCES Epreuve(Id_Epreuve),
   FOREIGN KEY(Id_Classement) REFERENCES Classement(Id_Classement)
);

CREATE TABLE changer_roles(
   Id_Benevol BIGINT,
   Id_Admin BIGINT,
   PRIMARY KEY(Id_Benevol, Id_Admin),
   FOREIGN KEY(Id_Benevol) REFERENCES Benevol(Id_Benevol),
   FOREIGN KEY(Id_Admin) REFERENCES Admin(Id_Admin)
);

CREATE TABLE possède(
   Id_Benevol BIGINT,
   Id_Roles BIGINT,
   PRIMARY KEY(Id_Benevol, Id_Roles),
   FOREIGN KEY(Id_Benevol) REFERENCES Benevol(Id_Benevol),
   FOREIGN KEY(Id_Roles) REFERENCES Roles(Id_Roles)
);

CREATE TABLE compte_benevol(
   Id_Benevol BIGINT,
   id_compte BIGINT,
   PRIMARY KEY(Id_Benevol, id_compte),
   FOREIGN KEY(Id_Benevol) REFERENCES Benevol(Id_Benevol),
   FOREIGN KEY(id_compte) REFERENCES compte(id_compte)
);

CREATE TABLE compte_participant(
   Id_PARTICIPATEUR BIGINT,
   id_compte BIGINT,
   PRIMARY KEY(Id_PARTICIPATEUR, id_compte),
   FOREIGN KEY(Id_PARTICIPATEUR) REFERENCES Participant(Id_PARTICIPATEUR),
   FOREIGN KEY(id_compte) REFERENCES compte(id_compte)
);

CREATE TABLE compte_admin(
   Id_Admin BIGINT,
   id_compte BIGINT,
   PRIMARY KEY(Id_Admin, id_compte),
   FOREIGN KEY(Id_Admin) REFERENCES Admin(Id_Admin),
   FOREIGN KEY(id_compte) REFERENCES compte(id_compte)
);

